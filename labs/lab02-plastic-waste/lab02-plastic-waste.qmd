---
title: "Lab 02 - D√©chets plastiques"
---

```{r include = FALSE}
knitr::opts_chunk$set(eval = FALSE)
knitr::opts_chunk$set(warning = TRUE)
```

La pollution plastique est un probl√®me majeur, avec des impacts n√©gatifs sur les oc√©ans et ses habitants
[Our World in Data](https://ourworldindata.org/plastic-pollution) poss√®de de nombreux jeux de donn√©es √† diff√©rents niveaux (globaux, par pays et sur le temps). Pour ce laboratoire, nous allons travailler avec les donn√©es de 2010.

National Geographic a lanc√© un concours de communication par visualisation de donn√©es sur le th√®me des d√©chets plastiques : [lien](https://www.nationalgeographic.org/funding-opportunities/innovation-challenges/plastic/dataviz/).

# Objectifs

-   Visualisation de donn√©es quantitatives et qualitatives.
-   Interpr√©tation de visualisations
-   Recr√©er des visualisations
-   Se pratiquer √† utiliser R, RStudio, Git, and GitHub

# Pour commencer

Nous allons utiliser GitHub Classroom pour que vous puissiez rendre vos r√©ponses.
Sur le portail de cours, vous trouverez un lien vers un assignment.

  - Cliquez sur le lien
  - Connectez vous avec votre compte Github si ce n'est pas fait
  - Acceptez l'assignment
  - Liez votre compte avec votre nom d'√©tudiant
  
Vous devriez maintenant voir un repository appel√© `Lab02-[votre-username]` o√π devrait √™tre votre nom d'utilisateur GitHub.

Sur la page du repository:

  - Cliquez sur le bouton vert: ![](figs/github-bouton.png){.inline-image}
  - Copiez le lien terminant en `.git`
    - Quelque chose ressemblant √† `https://github.com/PRO1036/lab02-[votre-username].git`

Dans RStudio:

-   Fichier \> Nouveau Projet
-   Version Control \> Git
-   Dans *Repository URL* : indiquez l'adresse copi√©e √† l'√©tape pr√©c√©dente
-   Choisissez un nom pour le dossier qui sera cr√©√©, par exemple "Lab02"
-   Choisissez o√π vous voulez cr√©er le projet dans votre ordinateur.

Cela va copier les fichiers pr√©sents sur GitHub, et les copier dans le dossier sp√©cifi√©.

### Pour commit vos r√©sultats

Dans RStudio, ouvrez le panneau `Git` sur la droite. S√©lectionnez les fichier que vous souhaitez commiter en cliquant sur la petite boite blanche. Un petit *A* vert devrait apparaitre dans la colonne _Status_.

Cliquez ensuite sur *Commit*. Entrez un message d√©crivant l'√©tape que vous avez compl√©t√©e.

### Pour envoyer vos r√©sultats sur Github

Cliquez sur la fl√®che verte *Push*. Il est possible que vous deviez vous connecter √† votre compte Github avant que l'envoie soit complet.

Sur Github, vous pouvez aller voir les modifications que vous avez apport√©es.

## Packages

Comme d'habitude, nous allons utiliser le **tidyverse** pour cette analyse.

```{r load-packages, message=FALSE, eval=TRUE}
library(tidyverse)
```

## Donn√©es

Le jeu de donn√©es pour ce lab peut √™tre trouv√© dans le dossier `data` pr√©sent dans le repo. Nous reparlerons du chargement de donn√©es locales plus tard mais pour l'instant il suffit de lancer cette ligne:

```{r load-data, message=FALSE, eval=TRUE}
plastic_waste <- read_csv("data/plastic-waste.csv")
```

Les variables pr√©sentes dans le jeu de donn√©es sont:

-   `code`: 3 lettres pour le code pays
-   `entity`: nom du pays
-   `continent`: nom du continent
-   `year`: ann√©e
-   `gdp_per_cap`: PID par habitant en $ (2011)
-   `plastic_waste_per_cap`: quantit√© de d√©chets plastiques par habitant en kg/jour
-   `mismanaged_plastic_waste_per_cap`: quantit√© de d√©chets plastiques non g√©r√©s par habitant en kg/jour
-   `mismanaged_plastic_waste`: quantit√© de d√©chets plastiques non g√©r√©s en tonnes
-   `coastal_pop`: Nombres de personnes vivant sur des c√¥tes
-   `total_pop`: Population totale selon Gapminder

# Warm up

:::{.callout-tip}
## Rappel

Ce que vous √©crivez dans votre fichier Rmd n'est pas ex√©cut√© dans la console et vice-versa. Les lignes dans le Rmd seront ex√©cut√©es au moment du *knit*. Vous pouvez aussi les copier dans la console mais n'oubliez pas qu'il faut copier les lignes pr√©c√©dentes √©galement !
:::

-   Quelles sont les quatre zones pr√©sentes sur RStudio ?
-   Combien y a-t-il d'observations dans le jeu de donn√©es ?  Vous pouvez √©galement vous aider des fonction `nrows`, `ncols` et `dim`. Si vous avez charg√© les donn√©es dans la console, elles apparaitrons dans l'environnement. Depuis la console, vous pouvez √©galement utiliser `View(plastic_waste)` pour voir le tableau.
-   En regardant les donn√©es, vous voyez que certaines cellules ont comme valeurs `NA`. Que cela signifie-t-il ?

:::{.callout-tip}

Vous pouvez utiliser l'aide depuis la console en utilisant `?NA`
:::

# Exercices

Commen√ßons par regarder la distribution g√©n√©rale des d√©chets plastiques par habitant en 2010

```{r plastic_waste_per_cap-hist, eval=TRUE}
ggplot(data = plastic_waste, aes(x = plastic_waste_per_cap)) +
  geom_histogram(binwidth = 0.2)
```

Sur la droite, il semble qu'un pays sorte du lot et pr√©sente une importante quantit√© de d√©chets. Une mani√®re d'identifier ce pays consiste √† filtrer les donn√©es pour afficher les valeurs sup√©rieures √† 3.5 kg/personne.

```{r plastic_waste_per_cap-max, eval=TRUE}
plastic_waste %>%
  filter(plastic_waste_per_cap > 3.5)
```

Aviez-vous anticip√© ce r√©sultat ?

:::{.callout-note}

Vous pourriez faire une rapide recherche sur Trinit√©-et-Tobago pour essayer de comprendre pourquoi le chiffre est haut, ou bien s'il s'agit d'une erreur de saisie dans les donn√©es.
:::

√Ä partir d'ici, nous allons retirer Trinit√©-et-Tobago des donn√©es pour le reste du lab. 

```{r plastic_waste_filtered, eval=TRUE}
plastic_waste <- plastic_waste %>%
  filter(plastic_waste_per_cap < 3.5)
```

:::{.callout-caution}

√Ä partir d'ici, vous allez devoir recr√©er ou cr√©er des visualisations !
:::

### Exercice 1

√Ä l'aide d'un histogramme, affichez la distribution des quantit√© de d√©chets par habitant, en ajoutant une facette par continent. Que pouvez-vous dire de la comparaison des continents, en terme de d√©chets plastiques ?

```{r echo=FALSE, eval=TRUE}
ggplot(plastic_waste, aes(x = plastic_waste_per_cap)) +
  geom_histogram(binwidth = 0.2) +
  facet_wrap(~ continent)

```

### Exercice 2
Une autre mani√®re consiste √† utiliser des graphes de densit√©. Recr√©ez le graphe suivant.

```{r plastic_waste_per_cap-dens, echo=FALSE, eval=TRUE}
ggplot(data = plastic_waste, aes(x = plastic_waste_per_cap)) +
  geom_density()
```

Colorez les courbes de densit√© par continent

```{r plastic_waste_per_cap-dens-color, echo=FALSE, eval=TRUE}
ggplot(data = plastic_waste, 
       mapping = aes(x = plastic_waste_per_cap, 
                     color = continent)) +
  geom_density()
```

Le graphe obtenu peut √™tre un peu difficile √† lire, essayez de remplir les courbes avec des couleurs.

```{r plastic_waste_per_cap-dens-color-fill, echo=FALSE, eval=TRUE}
ggplot(data = plastic_waste, 
       mapping = aes(x = plastic_waste_per_cap, 
                     color = continent, 
                     fill = continent)) +
  geom_density()
```

La superposition des couleurs n'aide pas √† la lecture du graphe. Nous pouvons changer la transparence de la couleur des courbes. Changez le `alpha` pour am√©liorer la qualit√© du graphe. Essayez plusieurs valeurs pour trouver quelque chose de convenable.

```{r plastic_waste_per_cap-dens-color-fill-alpha, echo=FALSE, eval=TRUE}
ggplot(data = plastic_waste, 
       mapping = aes(x = plastic_waste_per_cap, 
                     color = continent, 
                     fill = continent)) +
  geom_density(alpha = 0.4)
```


D√©crivez pourquoi le reglage de la couleur (`color` et `fill`) et le r√©glage de la transparence (`alpha`) ne se trouvent pas au m√™me endroit ? L'un √©tant r√©gl√© dans `aes` et l'autre dans `geom_density()`

üß∂ ‚úÖ ‚¨ÜÔ∏è 
*C'est le bon moment pour knitt, commit et push !*

### Exercice 3

Les boxplot sont aussi une bonne mani√®re de visualiser des relations. Reproduisez le graphe suivant.

```{r plastic_waste_per_cap-box, echo=FALSE, eval=TRUE}
ggplot(data = plastic_waste, 
       mapping = aes(x = continent, 
                     y = plastic_waste_per_cap)) +
  geom_boxplot()
```

Faites un grpahe similaire en utilisant les violin plots. Qu'est ce que les violin plots permettent de voir sur les donn√©es que les boxplot ne permettent pas ?

### Exercice 4

Visualisez la relation entre la quantit√© de d√©chet et la quantit√© de d√©chets non g√©r√©s en utilisant un graphe de dispersion (scatter plot). D√©crivez la relation.

Colorez les point selon le continent. Voyez-vous une tendance ?

### Exercice 5

Visualisez la relation entre la quantit√© de d√©chets plastiques par habitant et le nombre total d'habitants, et dans un second graphe, la relation entre la quantit√© de d√©chets plastiques et le nombre total d'habitants vivant pr√®s d'une c√¥te. Est-ce qu'il semble y avoir une relation plus forte pour l'une des paires de variables ?

üß∂ ‚úÖ ‚¨ÜÔ∏è 
*C'est le moment de knitt, commit et push ! N'oubliez pas d'ajouter un message √† votre push*

# Conclusion

Pour finir, essayer de refaire le graphe suivant:

```{r echo=FALSE, message=FALSE, eval=TRUE, warning=FALSE}
plastic_waste %>% 
  mutate(coastal_pop_prop = coastal_pop / total_pop) %>%
  filter(plastic_waste_per_cap < 3) %>%
  ggplot(aes(x = coastal_pop_prop, y = plastic_waste_per_cap, color = continent)) + 
    geom_point() +
    geom_smooth(color = "black") +
    #scale_color_viridis_d() +
    labs(x = "Proportion de la population c√¥ti√®re (Coastal / total population)", 
         y = "Nombre de d√©chets plastiques par habitant", 
         color = "Continent",
         title = "Quantit√© de d√©chets plastiques vs Proportion de la population c√¥ti√®re",
         subtitle = "Selon le continent") +
  scale_color_brewer(palette = "Set2")
```

Pour cela, nous devons manipuler les donn√©es l√©g√®rement pour calculer la proportion de population c√¥ti√®re. Nous verrons dans les prochaines semaine comment faire cela mais vous pouvez pour le moment utiliser les donn√©es suivantes:

```{r}
plastic_waste_coastal <- plastic_waste %>% 
  mutate(coastal_pop_prop = coastal_pop / total_pop) %>%
  filter(plastic_waste_per_cap < 3)
```

:::{.callout-note}
Nous avons calcul√© une nouvelle variable, la proportion de population c√¥ti√®re, appel√©e `coastal_pop_prop`, √† partir du nombre d'habitants vivant sur une c√¥te et du nombre d'habitants total. Nous avons √©galement fitr√© le pays avec une quantit√© de d√©chets par habitant sup√©rieure √† 3 kg/jour.
:::

Vous voyez que le graphe ne comporte pas seulement les points de donn√©es mais √©galement une courbe de tendance. Pour ajouter cela, vous pouvez aller lire comment utiliser la fonction *smooth* : [Documentation](https://ggplot2.tidyverse.org/reference/geom_smooth.html)


Pour terminer, interpr√©tez ce que vous observez !

üß∂ ‚úÖ ‚¨ÜÔ∏è 
*C'est la derni√®re √©tape ! Assurez que votre document final soit complet et propre. Notamment, certains graphes ne sont pas l√©gend√©s ni n√©cessairement tr√®s beaux. N'h√©sitez pas √† les modifier pour les compl√©ter. Quand tout est bon: knitt, commit et push !*